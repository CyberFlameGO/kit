// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fmp.proto

package fmp_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//A structure containing all the devices listed in the network repo.
type Devices struct {
	Devices   map[string]*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timestamp int64              `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	//Extra information describing locality positions
	Localities map[string]*Locality `protobuf:"bytes,3,rep,name=localities,proto3" json:"localities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//Links to remote locations
	Links                []*Link  `protobuf:"bytes,4,rep,name=links,proto3" json:"links,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Devices) Reset()         { *m = Devices{} }
func (m *Devices) String() string { return proto.CompactTextString(m) }
func (*Devices) ProtoMessage()    {}
func (*Devices) Descriptor() ([]byte, []int) {
	return fileDescriptor_936908a87da5a9ce, []int{0}
}

func (m *Devices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devices.Unmarshal(m, b)
}
func (m *Devices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devices.Marshal(b, m, deterministic)
}
func (m *Devices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devices.Merge(m, src)
}
func (m *Devices) XXX_Size() int {
	return xxx_messageInfo_Devices.Size(m)
}
func (m *Devices) XXX_DiscardUnknown() {
	xxx_messageInfo_Devices.DiscardUnknown(m)
}

var xxx_messageInfo_Devices proto.InternalMessageInfo

func (m *Devices) GetDevices() map[string]*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *Devices) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Devices) GetLocalities() map[string]*Locality {
	if m != nil {
		return m.Localities
	}
	return nil
}

func (m *Devices) GetLinks() []*Link {
	if m != nil {
		return m.Links
	}
	return nil
}

type Device struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Ipaddr               string   `protobuf:"bytes,2,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	Model                string   `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Sitecode             string   `protobuf:"bytes,4,opt,name=sitecode,proto3" json:"sitecode,omitempty"`
	Locality             string   `protobuf:"bytes,5,opt,name=locality,proto3" json:"locality,omitempty"`
	Tags                 []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_936908a87da5a9ce, []int{1}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *Device) GetIpaddr() string {
	if m != nil {
		return m.Ipaddr
	}
	return ""
}

func (m *Device) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Device) GetSitecode() string {
	if m != nil {
		return m.Sitecode
	}
	return ""
}

func (m *Device) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *Device) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Locality struct {
	Locality             string   `protobuf:"bytes,1,opt,name=locality,proto3" json:"locality,omitempty"`
	Latitude             float32  `protobuf:"fixed32,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float32  `protobuf:"fixed32,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Locality) Reset()         { *m = Locality{} }
func (m *Locality) String() string { return proto.CompactTextString(m) }
func (*Locality) ProtoMessage()    {}
func (*Locality) Descriptor() ([]byte, []int) {
	return fileDescriptor_936908a87da5a9ce, []int{2}
}

func (m *Locality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Locality.Unmarshal(m, b)
}
func (m *Locality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Locality.Marshal(b, m, deterministic)
}
func (m *Locality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Locality.Merge(m, src)
}
func (m *Locality) XXX_Size() int {
	return xxx_messageInfo_Locality.Size(m)
}
func (m *Locality) XXX_DiscardUnknown() {
	xxx_messageInfo_Locality.DiscardUnknown(m)
}

var xxx_messageInfo_Locality proto.InternalMessageInfo

func (m *Locality) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *Locality) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Locality) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type Link struct {
	Local                string   `protobuf:"bytes,1,opt,name=local,proto3" json:"local,omitempty"`
	Remote               string   `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty"`
	Network              *Network `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	Tags                 []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}
func (*Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_936908a87da5a9ce, []int{3}
}

func (m *Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Link.Unmarshal(m, b)
}
func (m *Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Link.Marshal(b, m, deterministic)
}
func (m *Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Link.Merge(m, src)
}
func (m *Link) XXX_Size() int {
	return xxx_messageInfo_Link.Size(m)
}
func (m *Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Link proto.InternalMessageInfo

func (m *Link) GetLocal() string {
	if m != nil {
		return m.Local
	}
	return ""
}

func (m *Link) GetRemote() string {
	if m != nil {
		return m.Remote
	}
	return ""
}

func (m *Link) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *Link) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Network struct {
	Ip                   []byte   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Mask                 []byte   `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_936908a87da5a9ce, []int{4}
}

func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (m *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(m, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Network) GetMask() []byte {
	if m != nil {
		return m.Mask
	}
	return nil
}

func init() {
	proto.RegisterType((*Devices)(nil), "fmp.Devices")
	proto.RegisterMapType((map[string]*Device)(nil), "fmp.Devices.DevicesEntry")
	proto.RegisterMapType((map[string]*Locality)(nil), "fmp.Devices.LocalitiesEntry")
	proto.RegisterType((*Device)(nil), "fmp.Device")
	proto.RegisterType((*Locality)(nil), "fmp.Locality")
	proto.RegisterType((*Link)(nil), "fmp.Link")
	proto.RegisterType((*Network)(nil), "fmp.Network")
}

func init() { proto.RegisterFile("fmp.proto", fileDescriptor_936908a87da5a9ce) }

var fileDescriptor_936908a87da5a9ce = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x95, 0x38, 0x4d, 0x9b, 0x69, 0xf8, 0x23, 0x0b, 0x21, 0x53, 0xad, 0x44, 0x08, 0x12,
	0xca, 0x85, 0x3d, 0x74, 0x2f, 0x08, 0x71, 0x42, 0x20, 0x2e, 0x15, 0x07, 0x1f, 0xb9, 0x80, 0xb7,
	0x71, 0x17, 0x2b, 0x71, 0x6c, 0xc5, 0xde, 0x45, 0x79, 0x19, 0x1e, 0x8a, 0x27, 0x42, 0xb6, 0x93,
	0x6c, 0xba, 0xda, 0x53, 0xe7, 0x9b, 0x6f, 0xe6, 0x37, 0x33, 0xb1, 0x0a, 0xd9, 0x49, 0xea, 0x4b,
	0xdd, 0x2b, 0xab, 0x30, 0x3a, 0x49, 0x5d, 0xfe, 0x8b, 0x61, 0xfd, 0x85, 0xdf, 0x89, 0x23, 0x37,
	0xf8, 0x0a, 0xd6, 0x75, 0x08, 0x49, 0x54, 0xa0, 0x6a, 0xbb, 0x7f, 0x75, 0xe9, 0xaa, 0x47, 0x7b,
	0xfa, 0xfd, 0xda, 0xd9, 0x7e, 0xa0, 0x53, 0x25, 0xbe, 0x80, 0xcc, 0x0a, 0xc9, 0x8d, 0x65, 0x52,
	0x93, 0xb8, 0x88, 0x2a, 0x44, 0xef, 0x13, 0xf8, 0x13, 0x40, 0xab, 0x8e, 0xac, 0x15, 0x56, 0x70,
	0x43, 0x90, 0xa7, 0x5e, 0x9c, 0x51, 0x0f, 0xb3, 0x1d, 0xc0, 0x8b, 0x7a, 0xfc, 0x1a, 0x56, 0xad,
	0xe8, 0x1a, 0x43, 0x12, 0xdf, 0x98, 0xf9, 0xc6, 0x83, 0xe8, 0x1a, 0x1a, 0xf2, 0xbb, 0x6f, 0x90,
	0x2f, 0xb7, 0xc2, 0xcf, 0x01, 0x35, 0x7c, 0x20, 0x51, 0x11, 0x55, 0x19, 0x75, 0x21, 0x7e, 0x03,
	0xab, 0x3b, 0xd6, 0xde, 0x72, 0xbf, 0xda, 0x76, 0xbf, 0x5d, 0xcc, 0xa6, 0xc1, 0xf9, 0x18, 0x7f,
	0x88, 0x76, 0x07, 0x78, 0xf6, 0x60, 0x91, 0x47, 0x58, 0x6f, 0xcf, 0x59, 0x4f, 0xc2, 0x3a, 0xa1,
	0x6d, 0x58, 0xd0, 0xca, 0xbf, 0x11, 0xa4, 0x61, 0x06, 0xde, 0xc1, 0xe6, 0xb7, 0x32, 0xb6, 0x63,
	0x92, 0x8f, 0xa8, 0x59, 0xe3, 0x97, 0x90, 0x0a, 0xcd, 0xea, 0xba, 0xf7, 0xc0, 0x8c, 0x8e, 0x0a,
	0xbf, 0x80, 0x95, 0x54, 0x35, 0x6f, 0x09, 0xf2, 0xe9, 0x20, 0x1c, 0xc9, 0x08, 0xcb, 0x8f, 0xaa,
	0xe6, 0x24, 0x09, 0xa4, 0x49, 0x3b, 0x6f, 0xfc, 0x6c, 0x03, 0x59, 0x05, 0x6f, 0xd2, 0x18, 0x43,
	0x62, 0xd9, 0x8d, 0x21, 0x69, 0x81, 0xaa, 0x8c, 0xfa, 0xb8, 0xfc, 0x05, 0x9b, 0x69, 0xef, 0xb3,
	0xde, 0xe8, 0x41, 0xaf, 0xf3, 0x98, 0x15, 0xf6, 0xb6, 0x0e, 0x47, 0xc7, 0x74, 0xd6, 0xee, 0xe1,
	0x5b, 0xd5, 0xdd, 0x04, 0x13, 0x79, 0xf3, 0x3e, 0x51, 0x6a, 0x48, 0xdc, 0x43, 0xb9, 0x5b, 0x3c,
	0x6d, 0x44, 0x07, 0xe1, 0x2e, 0xef, 0xb9, 0x54, 0x96, 0x4f, 0x97, 0x07, 0x85, 0xdf, 0xc1, 0xba,
	0xe3, 0xf6, 0x8f, 0xea, 0x1b, 0x4f, 0xdc, 0xee, 0x73, 0xff, 0x8d, 0xbf, 0x87, 0x1c, 0x9d, 0xcc,
	0xf9, 0xa6, 0x64, 0x71, 0xd3, 0x7b, 0x58, 0x8f, 0x75, 0xf8, 0x29, 0xc4, 0x42, 0xfb, 0x89, 0x39,
	0x8d, 0x85, 0x76, 0xe5, 0x92, 0x99, 0xc6, 0x0f, 0xcb, 0xa9, 0x8f, 0x3f, 0x6f, 0x7e, 0xa4, 0x27,
	0xa9, 0x7f, 0xea, 0xeb, 0xeb, 0xd4, 0xff, 0x1d, 0xae, 0xfe, 0x07, 0x00, 0x00, 0xff, 0xff, 0x75,
	0x9a, 0x96, 0x46, 0x1b, 0x03, 0x00, 0x00,
}
